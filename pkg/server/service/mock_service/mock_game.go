// Code generated by MockGen. DO NOT EDIT.
// Source: game.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	service "InfecShotAPI/pkg/server/service"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGameService is a mock of GameService interface.
type MockGameService struct {
	ctrl     *gomock.Controller
	recorder *MockGameServiceMockRecorder
}

// MockGameServiceMockRecorder is the mock recorder for MockGameService.
type MockGameServiceMockRecorder struct {
	mock *MockGameService
}

// NewMockGameService creates a new mock instance.
func NewMockGameService(ctrl *gomock.Controller) *MockGameService {
	mock := &MockGameService{ctrl: ctrl}
	mock.recorder = &MockGameServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGameService) EXPECT() *MockGameServiceMockRecorder {
	return m.recorder
}

// FinishGame mocks base method.
func (m *MockGameService) FinishGame(serviceRequest *service.FinishGameRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FinishGame", serviceRequest)
	ret0, _ := ret[0].(error)
	return ret0
}

// FinishGame indicates an expected call of FinishGame.
func (mr *MockGameServiceMockRecorder) FinishGame(serviceRequest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FinishGame", reflect.TypeOf((*MockGameService)(nil).FinishGame), serviceRequest)
}
